$grid-breakpoints: (
  xs: 420px,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
  xxxl: 1800px,
);

$gap: 8px;

@function gap($factor) {
  @return $gap * $factor;
}

// Mediaquery mixins
@mixin xs() {
  @media only screen and (min-width: map-get($grid-breakpoints, xs)) {
    @content;
  }
}

@mixin s() {
  @media only screen and (min-width: map-get($grid-breakpoints, sm)) {
    @content;
  }
}

@mixin m() {
  @media only screen and (min-width: map-get($grid-breakpoints, md)) {
    @content;
  }
}

@mixin l() {
  @media only screen and (min-width: map-get($grid-breakpoints, lg)) {
    @content;
  }
}

@mixin xl() {
  @media only screen and (min-width: map-get($grid-breakpoints, xl)) {
    @content;
  }
}

@mixin xxl() {
  @media only screen and (min-width: map-get($grid-breakpoints, xxl)) {
    @content;
  }
}

@mixin xxxl() {
  @media only screen and (min-width: map-get($grid-breakpoints, xxxl)) {
    @content;
  }
}

@mixin desktop() {
  // @media only screen and (min-width: map-get($grid-breakpoints, md)) and (min-height: map-get($grid-breakpoints, md)) {
  //   @content;
  // }
  @media only screen and (min-width: map-get($grid-breakpoints, md)) {
    @content;
  }
}

@mixin type-xs {
  font-family: var(--font-family-mono);
  font-size: var(--font-size-xs);
  letter-spacing: 0em;
  line-height: 0.9em;
}

@mixin type-s {
  font-size: var(--font-size-s);
  line-height: 1.5em;
}

@mixin type-m {
  font-size: var(--font-size-m);
  line-height: 1.2em;
  letter-spacing: -0.02em;
  font-size: 36px;
  font-weight: 900;
}

@mixin type-l {
  font-size: var(--font-size-l);
  line-height: 1.1em;
  letter-spacing: -0.02em;
}

@mixin type-xl {
  font-size: var(--font-size-xl);
  line-height: 1em;
  letter-spacing: -0.02em;
}

@mixin grid-col-3 {
  display: grid;
  grid-template-columns: 1fr;
  gap: gap(2);

  @include m {
    grid-template-columns: 1fr 1fr;
    gap: gap(4);
  }

  @include xxl {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

@mixin link {
  text-decoration: none;
  color: var(--c-accent);
  accent-color: var(--c-accent);
  transition: color 0.2s var(--ease);

  &:hover {
    color: var(--c-accent-hover);
  }
  &::visited {
    color: var(--c-accent-dark);
    accent-color: var(--c-accent-dark);
  }
}

@mixin tag {
  display: flex;
  align-items: center;
  background-color: var(--c-accent);
  color: var(--c-g);
  padding: 4px 12px;
  text-align: center;
  min-height: 25px;
  margin: 0;
  gap: gap(0.5);
  border-radius: 24px;
  transition: color 0.2s var(--ease), background-color 0.2s var(--ease);
}

@mixin indicator {
  right: calc(gap(1) * -1);
  width: gap(0.5);
  height: gap(0.5);
  border-radius: 50%;
  animation: blink 350ms var(--ease) infinite;
}

@keyframes blink {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
  }
}
